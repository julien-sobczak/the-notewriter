"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3266],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>b});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),m=c(t),f=i,b=m["".concat(l,".").concat(f)]||m[f]||p[f]||o;return t?a.createElement(b,r(r({ref:n},s),{},{components:t})):a.createElement(b,r({ref:n},s))}));function b(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=f;var d={};for(var l in n)hasOwnProperty.call(n,l)&&(d[l]=n[l]);d.originalType=e,d[m]="string"==typeof e?e:i,r[1]=d;for(var c=2;c<o;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},3283:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var a=t(7462),i=(t(7294),t(3905));const o={sidebar_position:1},r="Internals",d={unversionedId:"reference/internals",id:"reference/internals",title:"Internals",description:"Examples are sometimes edited to keep them concise. For example, most OIDs will be presented in a short form instead of their 40-character format.",source:"@site/docs/reference/internals.md",sourceDirName:"reference",slug:"/reference/internals",permalink:"/the-notewriter/docs/reference/internals",draft:!1,editUrl:"https://github.com/julien-sobczak/the-notewriter/tree/main/website/docs/reference/internals.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"documentationSidebar",previous:{title:"Reference",permalink:"/the-notewriter/docs/category/reference"},next:{title:"Commands",permalink:"/the-notewriter/docs/category/commands"}},l={},c=[{value:"<em>The NoteWriter</em> Objects",id:"the-notewriter-objects",level:2},{value:"<code>file</code>",id:"file",level:3},{value:"<code>note</code>",id:"note",level:3},{value:"<code>flashcard</code>",id:"flashcard",level:3},{value:"<code>media</code>",id:"media",level:3},{value:"<code>link</code>",id:"link",level:3},{value:"<code>reminder</code>",id:"reminder",level:3},{value:"<em>The NoteWriter</em> Database",id:"the-notewriter-database",level:2},{value:"<code>.nt/objects/</code>",id:"ntobjects",level:3},{value:"<code>.nt/objects/{xx}/{packfile-sha1}</code>",id:"ntobjectsxxpackfile-sha1",level:4},{value:"<code>.nt/objects/info/commit-graph</code>",id:"ntobjectsinfocommit-graph",level:4},{value:"<code>.nt/index</code>",id:"ntindex",level:3},{value:"<code>.nt/refs/</code>",id:"ntrefs",level:3},{value:"<code>.nt/database.db</code>",id:"ntdatabasedb",level:3},{value:"Example",id:"example",level:2}],s={toc:c},m="wrapper";function p(e){let{components:n,...t}=e;return(0,i.kt)(m,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"internals"},"Internals"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Examples are sometimes edited to keep them concise. For example, most OIDs will be presented in a short form instead of their 40-character format.")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"The NoteWriter")," is fundamentally a CLI to extract objects from Markdown files."),(0,i.kt)("h2",{id:"the-notewriter-objects"},(0,i.kt)("em",{parentName:"h2"},"The NoteWriter")," Objects"),(0,i.kt)("p",null,"When running commands like ",(0,i.kt)("inlineCode",{parentName:"p"},"nt add"),", ",(0,i.kt)("em",{parentName:"p"},"The NoteWriter")," parses Mardown files to extract different objects."),(0,i.kt)("h3",{id:"file"},(0,i.kt)("inlineCode",{parentName:"h3"},"file")),(0,i.kt)("p",null,"Each parsed file generates an object ",(0,i.kt)("inlineCode",{parentName:"p"},"file")," representing the file as a YAML document."),(0,i.kt)("p",null,"Ex (Mardown):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-md"},'---\ntags:\n- go\n---\n\n# Go\n\n## Reference: Golang History\n\n`#history`\n\n`@source: https://en.wikipedia.org/wiki/Go_(programming_language)`\n\n[Golang](https://go.dev/doc/ "#go/go") was designed by Robert Greisemer, Rob Pike,\nand Ken Thompson at Google in 2007.\n\n\n## Flashcard: Golang Logo\n\nWhat does the **Golang logo** represent?\n\n---\n\nA **gopher**.\n\n![Logo](./medias/go.png)\n\n\n## TODO: Conferences\n\n* [Gophercon Europe](https://gophercon.eu/) `#reminder-2023-06-26`\n')),(0,i.kt)("p",null,"Ex (Internal):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"oid: 6347cbdd           # A uniquely generated OID\nrelative_path: go.md    # Relative file path from the root of the repository\nwikilink: go            # Long wikilink (ex: [[go]] is a valid link to this file)\nfront_matter: null      # The front matter in YAML\nattributes:             # The file attributes (including optional tags)\n    tags:\n        - go\nbody: |-                # The raw body (without the Front Matter)\n    # Go\n    ...\nbody_line: 6            # The line number of the first body line\nmode: 420               # The UNIX file mode\nsize: 463               # The raw file sizze\nhash: 1eba21ae87635b6b9a76ca4df89bf2931da64d42 # A SHA-1 using file content as source\nmtime: 2023-01-01T12:00:00                     # The last modified time on FS\ncreated_at: 2023-01-01T12:00:00                # The file object creation time\nupdated_at: 2023-01-01T12:00:00                # The file object modification time\n")),(0,i.kt)("h3",{id:"note"},(0,i.kt)("inlineCode",{parentName:"h3"},"note")),(0,i.kt)("p",null,"Each ",(0,i.kt)("a",{parentName:"p",href:"/the-notewriter/docs/guides/notes"},"note"),", independent of its kind, generates an object ",(0,i.kt)("inlineCode",{parentName:"p"},"note")," representing the note as a YAML document."),(0,i.kt)("p",null,"Ex (Markdown):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-md"},'## Reference: Golang History\n\n`#history`\n\n`@source: https://en.wikipedia.org/wiki/Go_(programming_language)`\n\n[Golang](https://go.dev/doc/ "#go/go") was designed by Robert Greisemer, Rob Pike,\nand Ken Thompson at Google in 2007.\n')),(0,i.kt)("p",null,"Ex (Internal):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'oid: d790d08c                             # Unique generated OID\nfile_oid: 6347cbdd                        # OID of the file containing this note\nparent_note_oid: ""                       # OID of the parent heading when nested under a note\nkind: reference                           # Kind of the object\ntitle: \'Reference: Golang History\'        # Raw Title without the heading character(s) "#"\nshort_title: Golang History               # Title without the kind prefix\nlong_title: Golang History                # Concatenation with all optional parent short titles\nrelative_path: go.md                      # Relative path of the file containingg this note\nwikilink: \'go#Reference: Golang History\'  # Long wikilink (ex: [[go#Reference: Golang History]] is a valid link)\nattributes:                               # Attributes (including inherited ones)\n    source: https://en.wikipedia.org/wiki/Go_(programming_language)\n    tags:\n        - go\n        - history\n    title: Golang History\ntags:                                     # Tags (= special attribute named "tags")\n    - go\n    - history\nline: 8                                   # Line number of the first line inside the file\ncontent_raw: |-                           # Content as present in file\n    `#history`\n\n    `@source: https://en.wikipedia.org/wiki/Go_(programming_language)`\n\n    [Golang](https://go.dev/doc/ "#go/go") was designed by Robert Greisemer, Rob Pike, and Ken Thompson at Google in 2007.\ncontent_hash: 0eba86c8b008c0222869ef5358d48ab8241ffc8e # SHA-1 of the property content_raw\ntitle_markdown: \'# Golang History\'   # Short title in Markdown\ntitle_html: <h1>Golang History</h1>  # Short title in HTML\ntitle_text: |-                       # Short title in plain text\n    Golang History\n    ==============\ncontent_markdown: |-                 # Processed content in Markdown\n    [Golang](https://go.dev/doc/ "#go/go") was designed by Robert Greisemer, Rob Pike, and Ken Thompson at Google in 2007.\'\ncontent_html: |-                     # Processed content in HTML\n    <p><a href="https://go.dev/doc/" title="#go/go">Golang</a> was designed by Robert Greisemer, Rob Pike, and Ken Thompson at Google in 2007.</p>\ncontent_text: |-                     # Processed content in plain text\n    Golang was designed by Robert Greisemer, Rob Pike, and Ken Thompson at Google in 2007.\ncreated_at: 2023-01-01T12:00:00      # Object creation time\nupdated_at: 2023-01-01T12:00:00      # Object modification time\n')),(0,i.kt)("h3",{id:"flashcard"},(0,i.kt)("inlineCode",{parentName:"h3"},"flashcard")),(0,i.kt)("p",null,"Each ",(0,i.kt)("a",{parentName:"p",href:"/the-notewriter/docs/guides/notes"},"note")," of kind ",(0,i.kt)("inlineCode",{parentName:"p"},"flashcard")," generates an additional object ",(0,i.kt)("inlineCode",{parentName:"p"},"flashcard")," representing the flashcard to learn as a YAML document."),(0,i.kt)("p",null,"Ex (Markdown):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-md"},"## Flashcard: Golang Logo\n\nWhat does the **Golang logo** represent?\n\n---\n\nA **gopher**.\n\n![Logo](./medias/go.png)\n")),(0,i.kt)("p",null,"Ex (Internal):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'oid: 3c268dd8             # Unique generated OID\nshort_title: Golang Logo  # Short title of the note\nfile_oid: 6347cbdd        # File OID containing the note\nnote_oid: 3513929a        # Note OID associated with this flashcard\nrelative_path: go.md      # Relative path to the file\ntags: [go]                # Tags (= special attributes "tags")\ninterval: 1               # Various SRS settings\n...\nfront_markdown: |-        # Front card in Markdown\n    What does the **Golang logo** represent?\nback_markdown: |-         # Back card in Markdown\n    A **gopher**.\n\n    ![Logo](oid:4a4faba3)\nfront_html: |-            # Front card in HTML\n    <p>What does the <strong>Golang logo</strong> represent?</p>\nback_html: |-             # Back card in HTML\n    <p>A <strong>gopher</strong>.</p>\n\n    <p><media oid="4a4faba3" alt="Logo" /></p>\nfront_text: |-            # Front card in plain text\n    What does the Golang logo represent?\nback_text: |-             # Back card in HTML\n    A gopher.\n\n    ![Logo](oid:4a4faba3)\ncreated_at: 2023-01-01T12:00:00  # Object creation time\nupdated_at: 2023-01-01T12:00:00  # Object modification time\n')),(0,i.kt)("h3",{id:"media"},(0,i.kt)("inlineCode",{parentName:"h3"},"media")),(0,i.kt)("p",null,"Each link inside ",(0,i.kt)("inlineCode",{parentName:"p"},"note")," referencing a local file generates an object ",(0,i.kt)("inlineCode",{parentName:"p"},"media")," representing the media file as a YAML document."),(0,i.kt)("p",null,"Ex (Markdown):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-md"},"![Logo](./medias/go.png)\n")),(0,i.kt)("p",null,"Ex (Internal):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"oid: 840dd3bc                    # Unique generated OID\nrelative_path: medias/go.png     # Relative path to root directory of the repository\nkind: picture                    # Object kind\ndangling: false                  # True when file is not present on disk\nextension: .png                  # File extension\nmtime: 2023-01-01T12:00:00       # File last modification time on FS\nhash: ef81045f57ea747457769965487ac8211a44ed32 # SHA-1 using file content as source\nsize: 14220                      # File size in bytes\nmode: 420                        # UNIX file modes\nblobs:                           # List of blobs (= optimized versions)\n    - oid: 6545e323              # Unique OID using file content\n      mime: image/avif           # Mime type\n      attributes: {}             # Optional attributes\n      tags:                      # Identify the blob type\n        - preview                # (preview = thumbnail)\n        - lossy                  # (lossy = lossy conversion)\n    - oid: eb49431b\n      mime: image/avif\n      attributes: {}\n      tags:\n        - original\n        - lossy\ncreated_at: 2023-01-01T12:00:00  # Object creation time\nupdated_at: 2023-01-01T12:00:00  # Object modification time\n")),(0,i.kt)("h3",{id:"link"},(0,i.kt)("inlineCode",{parentName:"h3"},"link")),(0,i.kt)("p",null,"Each link (internal or external) that includes a Go link inside the link's title generates an additional object ",(0,i.kt)("inlineCode",{parentName:"p"},"link")," representing the special link as a YAML document."),(0,i.kt)("p",null,"Ex (Markdown):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-md"},'[Golang](https://go.dev/doc/ "#go/go") was designed by Robert Greisemer, Rob Pike, and Ken Thompson at Google in 2007.\n')),(0,i.kt)("p",null,"Ex (Internal):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'oid: 8c9d3ed                      # Unique generated OID\nnote_oid: d790d08c                # Note OID containing the link definition\nrelative_path: go.md              # Relative path to the file containing the link\ntext: Golang                      # Link Text\nurl: https://go.dev/doc/          # Link target URL\ntitle: ""                         # Link title without the special syntax for the Go link\ngo_name: go                       # Name of the Go link\ncreated_at: 2023-01-01T12:00:00   # Object creation time\nupdated_at: 2023-01-01T12:00:00   # Object modification time\n')),(0,i.kt)("h3",{id:"reminder"},(0,i.kt)("inlineCode",{parentName:"h3"},"reminder")),(0,i.kt)("p",null,"Reminders are defined using a special tag syntax and generate additional ",(0,i.kt)("inlineCode",{parentName:"p"},"reminder")," object representing the reminders as YAML document:"),(0,i.kt)("p",null,"Ex (Markdown):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-md"},"* [Gophercon Europe](https://gophercon.eu/) `#reminder-2023-06-26`\n")),(0,i.kt)("p",null,"Ex (Internal):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"oid: 9032a26e              # Unique generated OID\nfile_oid: 6347cbdd         # File OID containing this reminder\nnote_oid: 9d5ac892         # Note OID containing this reminder\nrelative_path: go.md       # Relative path to the file containing this reminder\ndescription_raw: |-        # The raw description of reminder\n    '[Gophercon Europe](https://gophercon.eu/)'\ndescription_markdown: |-   # The processed description in Markdown\n    '[Gophercon Europe](https://gophercon.eu/)'\ndescription_html: |-       # The processed description in HTML\n    <p><a href=\"https://gophercon.eu/\">Gophercon Europe</a></p>\ndescription_text: |-       # The processed description in plain text\n    Gophercon Europe\ntag: '#reminder-2023-06-26'               # The tag\nlast_performed_at: 0001-01-01T00:00:00Z   # Last time when the reminder what planned (for recurring reminder)\nnext_performed_at: 2023-06-26T00:00:00Z   # Next time when the reminder is planned (for future reminder)\ncreated_at: 2023-01-01T12:00:00           # Object creation time\nupdated_at: 2023-01-01T12:00:00           # Object modification time\n")),(0,i.kt)("h2",{id:"the-notewriter-database"},(0,i.kt)("em",{parentName:"h2"},"The NoteWriter")," Database"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("em",{parentName:"p"},"The NoteWriter")," internal database (like commands) is largely inspired by Git. If you have already looked at ",(0,i.kt)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Git-Internals-Plumbing-and-Porcelain"},"Git Internals"),", the file names and their organization on disk are very similar. Here are the main differences:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"The content of index files is mostly YAML files (easier to debug but less performant)."),(0,i.kt)("li",{parentName:"ul"},"There are no branching, no versioning. ",(0,i.kt)("em",{parentName:"li"},"The NoteWriter")," is designed to be used along Git."),(0,i.kt)("li",{parentName:"ul"},"Objects are persisted in pack files immediately to limit the number of files on disk (Git defers the creation of packfiles in a maintenance task)."))),(0,i.kt)("p",null,"Above objects are stored (indirectly) in the index. Ex:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},".\n\u251c\u2500\u2500 .nt\n\u2502\xa0\xa0 \u251c\u2500\u2500 .gitignore\n\u2502\xa0\xa0 \u251c\u2500\u2500 config\n\u2502\xa0\xa0 \u251c\u2500\u2500 database.db\n\u2502\xa0\xa0 \u251c\u2500\u2500 index\n\u2502\xa0\xa0 \u251c\u2500\u2500 objects\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 4a\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 af\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 afe988e5f40e4d1181a86f522e3c1f2e6f0241e3\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 db\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 dbeaba7026ce4be8aa84ee85992dc9eca31118f7\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 e7\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 e7b26e89367a22b5f578532a74742e646f843e1f\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 info\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 commit-graph\n\u2502\xa0\xa0 \u2514\u2500\u2500 refs\n\u2502\xa0\xa0     \u2514\u2500\u2500 main\n\u251c\u2500\u2500 .ntignore\n\u251c\u2500\u2500 hello.md\n\u2514\u2500\u2500 me.png\n")),(0,i.kt)("p",null,"This section documents the format of the different files that composed the internal database."),(0,i.kt)("h3",{id:"ntobjects"},(0,i.kt)("inlineCode",{parentName:"h3"},".nt/objects/")),(0,i.kt)("p",null,"This directory contains two kinds of objects:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Pack Files (a group of edited objects referenced by a single commit)."),(0,i.kt)("li",{parentName:"ul"},"Blobs (the raw bytes for a single media file, the metadata are stored in the media object referencing the blob inside a commit object).")),(0,i.kt)("p",null,"All objects (leafs such as ",(0,i.kt)("inlineCode",{parentName:"p"},"note")," or pack files) and all blobs are uniquely identified by their OID, a 40-character string similar to the SHA-1 used by Git. This OID is used to spread the files into subdirectories and avoid having thousands of files directly under ",(0,i.kt)("inlineCode",{parentName:"p"},".nt/objects"),". For example, the pack file ",(0,i.kt)("inlineCode",{parentName:"p"},"afe988e5f40e4d1181a86f522e3c1f2e6f0241e3")," and the blob ",(0,i.kt)("inlineCode",{parentName:"p"},"6ee8a9620d3f4d3f9fbd159744ef85b83400b0d4")," will be stored like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},".nt\n\u2514\u2500\u2500 objects\n \xa0\xa0 \u251c\u2500\u2500 6e\n \xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 6ee8a9620d3f4d3f9fbd159744ef85b83400b0d4\n \xa0\xa0 \u2514\u2500\u2500 af\n \xa0\xa0   \xa0 \u2514\u2500\u2500 afe988e5f40e4d1181a86f522e3c1f2e6f0241e3\n")),(0,i.kt)("p",null,"The directory ",(0,i.kt)("inlineCode",{parentName:"p"},"objects")," contains an additional file ",(0,i.kt)("inlineCode",{parentName:"p"},".nt/objects/info/commit-graph")," containing the linear sequence of commits (and their pack files) applied in this repository."),(0,i.kt)("h4",{id:"ntobjectsxxpackfile-sha1"},(0,i.kt)("inlineCode",{parentName:"h4"},".nt/objects/{xx}/{packfile-sha1}")),(0,i.kt)("p",null,"Pack files are YAML objects."),(0,i.kt)("p",null,"Ex:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'oid: 4a03d1ab               # A unique OID for this pack file (as present in commit-graph under the corresponding commit)\nctime: 2023-01-01T12:00:00  # The creation time\nobjects:                    # The list of all objects added/modified/deleted (a new pack file cannot contain more than a predefined number of objects)\n    - oid: d19a2bba                      # The object OID\n      kind: file                         # The object kind\n      state: added                       # The action introduced by this commit\n      mtime: 2023-01-01T12:00:00         # The modification time of the action\n      desc: file "hello.md" [d19a2bba]   # A human-readable description of the object\n      data: <value>                      # A base64-encoded representation of the object\n    - oid: 6ee8a962\n      kind: note\n      state: added\n      mtime: 2023-01-01T12:00:00\n      desc: \'note "Reference: Hello" [6ee8a962]\'\n      data: <value>\n')),(0,i.kt)("p",null,"Each object is self-containing through the ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," attribute and compressed using zlib and encoded in Base 64. You can easily retrieve the uncompressed content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# On MacOS\n$ brew install qpdf\n$ echo \"<value>\" | base64 -d | zlib-flate -uncompress\noid: 6ee8a962\nfile_oid: d19a2bba\nkind: reference\nrelative_path: hello.md\nwikilink: 'hello#Reference: Hello'\ncontent_raw: Coucou\ncontent_hash: b70f7d0e2acef2e0fa1c6f117e3c11e0d7082232\n...\n")),(0,i.kt)("p",null,"The main motivation behind pack files is to limit the number of files on disk (and the number of files to transfer when using a ",(0,i.kt)("a",{parentName:"p",href:"/the-notewriter/docs/guides/remote"},"remote repository"),")."),(0,i.kt)("h4",{id:"ntobjectsinfocommit-graph"},(0,i.kt)("inlineCode",{parentName:"h4"},".nt/objects/info/commit-graph")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"commit-graph")," file lists in a sequential order all commits that was processed in this repository. The list is useful when retrieving new objects from a ",(0,i.kt)("a",{parentName:"p",href:"/the-notewriter/docs/guides/remote"},"remote")," to quickly determine the missing commits to replay."),(0,i.kt)("p",null,"Ex:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"updated_at: 2023-01-01T12:00:00       # Date of the last applied commit\ncommits:                              # List of commits\n    - oid: 4a03d1ab                   # - Older commit\n      ctime: 2023-01-01T10:00:00      #\n      packfiles: [de29102f]           #\n    - oid: dbeaba70                   # - ...\n      ctime: 2023-01-01T11:00:00      #\n      packfiles: [ed431a12, 34fa982a] #\n    - oid: afe988e5                   # - Last commit\n      ctime: 2023-01-01T12:00:00      #\n      packfiles: [aa8765d1]           #\n")),(0,i.kt)("h3",{id:"ntindex"},(0,i.kt)("inlineCode",{parentName:"h3"},".nt/index")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"index")," file serves multiple purposes. It contains the staging area (= the list of objects to include in the next commit) and keeps a list of all objects to quickly locate the commit and pack file containing them."),(0,i.kt)("p",null,"Ex:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'objects:                                      # List of all known objects in repository\n                                              # (do not include pack file objects)\n    - oid: d19a2bba                           # Object OID\n      kind: file                              # Object Kind\n      mtime: 2023-01-01T12:00:00              # Object modification time\n      commit_oid: 4a03d1ab                    # Commit OID containing the last version\n    - oid: 6ee8a962\n      kind: note\n      mtime: 2023-01-01T12:00:00\n      commit_oid: 4a03d1ab\n    - oid: 3837a10f\n      kind: media\n      mtime: 2023-01-01T12:00:00\n      commit_oid: dbeaba70\norphan_blobs: []\norphan_packfiles: []\nstaging: # The Staging Area (= nt add)\n    # NB: Objects in staging area uses\n    # the same format as object in commit files\n    # (make easy to create new commit files)\n    - oid: d19a2bba42\n      kind: file\n      state: modified\n      mtime: 2023-01-01T12:00:00\n      desc: file "hello.md" [d19a2bba]\n      data: <value>\n      previous_commit_oid: afe988e5\n      previous_packfile_oid: b45ef325\n    - oid: 6ee8a962\n      kind: note\n      state: modified\n      mtime: 2023-01-01T12:00:00\n      desc: \'note "Reference: Hello" [6ee8a962]\'\n      data: <value>\n      previous_commit_oid: afe988e5\n      previous_packfile_oid: b45ef325\n')),(0,i.kt)("h3",{id:"ntrefs"},(0,i.kt)("inlineCode",{parentName:"h3"},".nt/refs/")),(0,i.kt)("p",null,"In the same way that Git Branches are simply aliases to commit SHA-1, references contains a commit OID."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".nt/refs/main")," is the reference for the local repository (= the last commit OID present in ",(0,i.kt)("inlineCode",{parentName:"li"},"commit-graph"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".nt/refs/remote")," is only present when using a ",(0,i.kt)("a",{parentName:"li",href:"/the-notewriter/docs/guides/remote"},"remote"),". It contains the last known commit when the remote was last checked.")),(0,i.kt)("h3",{id:"ntdatabasedb"},(0,i.kt)("inlineCode",{parentName:"h3"},".nt/database.db")),(0,i.kt)("p",null,"In addition to raw files, ",(0,i.kt)("em",{parentName:"p"},"The NoteWriter")," also comprises a SQLite database (populated using the same information as present in object files). This database is used to speed up commands but also to benefit from the ",(0,i.kt)("a",{parentName:"p",href:"https://www.sqlite.org/fts5.html"},"full-text search support")," when using the desktop application."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Setup a new repository"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ mkdir notes\n$ cd notes\n$ nt init\n")),(0,i.kt)("p",{parentName:"li"},"Inspect the database:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},".\n\u251c\u2500\u2500 .nt\n\u2502\xa0\xa0 \u251c\u2500\u2500 .gitignore\n\u2502\xa0\xa0 \u2514\u2500\u2500 config\n\u2514\u2500\u2500 .ntignore\n")),(0,i.kt)("p",{parentName:"li"},"Most files are still missing and will be populated only after adding files."))),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add a new note"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'$ nt init\n$ echo "# Reference: Hello\\n\\nCoucou" > hello.md\n$ nt add hello.md && nt commit\n[bf712c5de01642338ce2d16a37daabeb37daabeb]\n 2 objects changes, 2 insertion(s)\n create file "hello.md" [d19a2bba42d44d8a82b18b2edcd4320612a3dfbc]\n create note "Reference: Hello" [6ee8a9620d3f4d3f9fbd159744ef85b83400b0d4]\n')),(0,i.kt)("p",{parentName:"li"},"Inspect the database:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ tree -a\n.\n\u251c\u2500\u2500 .nt\n\u2502\xa0\xa0 \u251c\u2500\u2500 .gitignore\n\u2502\xa0\xa0 \u251c\u2500\u2500 config\n\u2502\xa0\xa0 \u251c\u2500\u2500 database.db\n\u2502\xa0\xa0 \u251c\u2500\u2500 index\n\u2502\xa0\xa0 \u251c\u2500\u2500 objects\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 4a\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 info\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 commit-graph\n\u2502\xa0\xa0 \u2514\u2500\u2500 refs\n\u2502\xa0\xa0     \u2514\u2500\u2500 main\n\u251c\u2500\u2500 .ntignore\n\u2514\u2500\u2500 hello.md\n")),(0,i.kt)("p",{parentName:"li"},"Database files have now been created. We have a new object under ",(0,i.kt)("inlineCode",{parentName:"p"},"objects")," representing the unique pack file (",(0,i.kt)("inlineCode",{parentName:"p"},"4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6"),") contained in our commit and containing the objects:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'$ nt cat-file\noid: 4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6\nctime: 2023-01-01T12:00:00\nobjects:\n    - oid: d19a2bba42d44d8a82b18b2edcd4320612a3dfbc\n      kind: file\n      state: added\n      mtime: 2023-01-01T12:00:00\n      desc: file "hello.md" [d19a2bba42d44d8a82b18b2edcd4320612a3dfbc]\n      data: aBc...=\n    - oid: 6ee8a9620d3f4d3f9fbd159744ef85b83400b0d4\n      kind: note\n      state: added\n      mtime: 2023-01-01T12:00:00\n      desc: \'note "Reference: Hello" [6ee8a9620d3f4d3f9fbd159744ef85b83400b0d4]\'\n      data: eFg==\n')),(0,i.kt)("p",{parentName:"li"},"The commit has been recording into the ",(0,i.kt)("inlineCode",{parentName:"p"},"commit-graph"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ cat .nt/objects/info/commit-graph\nupdated_at: 2023-01-01T12:00:00\ncommits:\n    - oid: bf712c5de01642338ce2d16a37daabeb37daabeb\n      ctime: 2023-01-01T12:00:00\n      packfiles: [4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6]\n")),(0,i.kt)("p",{parentName:"li"},"The reference ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," points to this commit:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ cat .nt/refs/main\nbf712c5d\n")),(0,i.kt)("p",{parentName:"li"},"And our index has been updated to clear the staging area:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ cat .nt/index\nobjects:\n    - oid: d19a2bba42d44d8a82b18b2edcd4320612a3dfbc\n      kind: file\n      mtime: 2023-01-01T12:00:00\n      commit_oid: 4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6\n    - oid: 6ee8a9620d3f4d3f9fbd159744ef85b83400b0d4\n      kind: note\n      mtime: 2023-01-01T12:00:00\n      commit_oid: 4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6\norphan_blobs: []\norphan_packfiles: []\nstaging: []\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Edit the note to reference a new media"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ cp ~/me.png .\n$ echo \"\\n\"'![](me.png)' >> hello.md\n$ nt add\n")),(0,i.kt)("p",{parentName:"li"},"Check that the staging area is not empty:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'$ cat .nt/index\nobjects:\n- oid: d19a2bba42d44d8a82b18b2edcd4320612a3dfbc\n  kind: file\n  mtime: 2023-01-01T12:00:00\n  commit_oid: bf712c5de01642338ce2d16a37daabeb37daabeb\n  packfile_oid: 4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6\n- oid: 6ee8a9620d3f4d3f9fbd159744ef85b83400b0d4\n  kind: note\n  mtime: 2023-01-01T12:00:00\n  commit_oid: bf712c5de01642338ce2d16a37daabeb37daabeb\n  packfile_oid: 4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6\norphan_blobs: []\norphan_packfiles: []\nstaging:\n    - oid: 3837a10fbc3a47c7961896febf64463b4a006c79\n      kind: media\n      state: added\n      mtime: 2023-01-01T12:00:00\n      desc: media me.png [3837a10fbc3a47c7961896febf64463b4a006c79]\n      data: gHi...=\n      previous_commit_oid: ""\n      previous_packfile_oid: ""\n    - oid: d19a2bba42d44d8a82b18b2edcd4320612a3dfbc\n      kind: file\n      state: modified\n      mtime: 2023-01-01T12:00:00\n      desc: file "hello.md" [d19a2bba42d44d8a82b18b2edcd4320612a3dfbc]\n      data: AbC...=\n      previous_commit_oid: "bf712c5de01642338ce2d16a37daabeb37daabeb"\n      previous_packfile_oid: "4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6"\n    - oid: 6ee8a9620d3f4d3f9fbd159744ef85b83400b0d4\n      kind: note\n      state: modified\n      mtime: 2023-01-01T12:00:00\n      desc: \'note "Reference: Hello" [6ee8a9620d3f4d3f9fbd159744ef85b83400b0d4]\'\n      data: DeF...=\n      previous_commit_oid: "bf712c5de01642338ce2d16a37daabeb37daabeb"\n      previous_packfile_oid: "4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6"\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Commit changes"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'$ nt commit\n[c34575fba9884d62b5512e2c5fbc274c5fbc274c]\n 3 objects changes, 1 insertion(s), 2 modification(s)\n create media me.png [3837a10fbc3a47c7961896febf64463b4a006c79]\n modify file "hello.md" [d19a2bba42d44d8a82b18b2edcd4320612a3dfbc]\n modify note "Reference: Hello" [6ee8a9620d3f4d3f9fbd159744ef85b83400b0d4]\n\n$ tree -a\n.\n\u251c\u2500\u2500 .nt\n\u2502\xa0\xa0 \u251c\u2500\u2500 .gitignore\n\u2502\xa0\xa0 \u251c\u2500\u2500 config\n\u2502\xa0\xa0 \u251c\u2500\u2500 database.db\n\u2502\xa0\xa0 \u251c\u2500\u2500 index\n\u2502\xa0\xa0 \u251c\u2500\u2500 objects\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 4a\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 db\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 dbeaba7026ce4be8aa84ee85992dc9eca31118f7\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 e7\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 e7b26e89367a22b5f578532a74742e646f843e1f\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 info\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 commit-graph\n\u2502\xa0\xa0 \u2514\u2500\u2500 refs\n\u2502\xa0\xa0     \u2514\u2500\u2500 main\n\u251c\u2500\u2500 .ntignore\n\u2514\u2500\u2500 hello.md\n')),(0,i.kt)("p",{parentName:"li"},"The commit has been recorded:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ cat .nt/objects/info/commit-graph\nupdated_at: 2023-01-01T12:00:00\ncommits:\n    - oid: bf712c5de01642338ce2d16a37daabeb37daabeb\n      ctime: 2023-01-01T12:00:00\n      packfile: [4a03d1ab3dbe4c5d9efacd0e05e187179c5415c6]\n    - oid: c34575fba9884d62b5512e2c5fbc274c5fbc274c\n      ctime: 2023-01-01T12:00:00\n      packfile: [dbeaba7026ce4be8aa84ee85992dc9eca31118f7]\n$ cat .nt/refs/main\ndbeaba7026ce4be8aa84ee85992dc9eca31118f7\n")))),(0,i.kt)("p",null,"That's all. You have seen the various files in action."))}p.isMDXComponent=!0}}]);