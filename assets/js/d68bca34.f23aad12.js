"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6695],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=m(n),u=o,f=d["".concat(s,".").concat(u)]||d[u]||p[u]||i;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,a[1]=l;for(var m=2;m<i;m++)a[m]=n[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6941:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:6},a="nt commit",l={unversionedId:"reference/commands/nt-commit",id:"reference/commands/nt-commit",title:"nt commit",description:"Name",source:"@site/docs/reference/commands/nt-commit.md",sourceDirName:"reference/commands",slug:"/reference/commands/nt-commit",permalink:"/the-notewriter/docs/reference/commands/nt-commit",draft:!1,editUrl:"https://github.com/julien-sobczak/the-notewriter/tree/main/website/docs/reference/commands/nt-commit.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"documentationSidebar",previous:{title:"nt reset",permalink:"/the-notewriter/docs/reference/commands/nt-reset"},next:{title:"nt push",permalink:"/the-notewriter/docs/reference/commands/nt-push"}},s={},m=[{value:"Name",id:"name",level:2},{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"See Also",id:"see-also",level:2}],c={toc:m},d="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"nt-commit"},(0,o.kt)("inlineCode",{parentName:"h1"},"nt commit")),(0,o.kt)("h2",{id:"name"},"Name"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"the-notewriter commit")," \u2014 Record changes to the repository."),(0,o.kt)("h2",{id:"synopsis"},"Synopsis"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Usage:\n  nt commit [flags]\n\nFlags:\n  -h, --help             help for commit\n  -m, --message string   commit message\n")),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"Create a new commit containing the current contents of the index and the given log message describing the changes. The new commit is a direct child of the last known commit."),(0,o.kt)("p",null,"The content to be committed can be specified in several ways:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"by using ",(0,o.kt)("inlineCode",{parentName:"li"},"nt add"),' to incrementally "add" changes to the index before using the ',(0,o.kt)("inlineCode",{parentName:"li"},"commit"),' command (Note: even modified files must be "added").')),(0,o.kt)("p",null,"No other was are currently supported."),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-m <msg>"),", ",(0,o.kt)("inlineCode",{parentName:"li"}," --message=<msg>"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Use the given ",(0,o.kt)("inlineCode",{parentName:"li"},"<msg>")," as the commit message. No multiple ",(0,o.kt)("inlineCode",{parentName:"li"},"-m")," are supported.")))),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,'When recording your own work, the contents of modified files in your working tree are temporarily stored to a staging area called the "index" with ',(0,o.kt)("inlineCode",{parentName:"p"},"nt add"),". After building the state to be committed incrementally, ",(0,o.kt)("inlineCode",{parentName:"p"},"nt commit")," is used to record what has been staged so far. This is the most basic form of the command. An example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'$ edit hello.md\n$ nt add hello.md\n$ nt commit -m "Add hello.md"\n')),(0,o.kt)("p",null,"A commit doesn't have an author. Use Git to version your files and preserve the history."),(0,o.kt)("h2",{id:"see-also"},"See Also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/the-notewriter/docs/reference/commands/nt-add"},(0,o.kt)("inlineCode",{parentName:"a"},"nt-add"))," to add new changes in staging area")))}p.isMDXComponent=!0}}]);